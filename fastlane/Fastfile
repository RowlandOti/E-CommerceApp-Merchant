# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  before_all do
     is_releasable = analyze_commits(match: 'v*')
   end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Builds the debug code"
  lane :buildDebug do
    gradle(task: "assembleDebug")
  end

  desc "Builds the release code"
  lane :buildRelease do
    gradle(task: "assembleRelease")
  end

  desc "Deploy a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new Internal Build to Play Store"
  lane :deployInternal do
    gradle(task: "clean assembleRelease bundleRelease")
    upload_to_play_store(track: 'internal', skip_upload_apk: true, aab: 'ui/build/outputs/bundle/release/ui-release.aab')
  end

  desc "Deploy a new Alpha Build to Play Store"
  lane :deployAlpha do
    change_log_notes  = conventional_changelog()
    upload_to_play_store(track: 'alpha', skip_upload_apk: true,
        aab: 'ui/build/outputs/bundle/release/ui-release.aab',
        version_code: number_of_commits(all: true),
        version_name: lane_context[SharedValues::RELEASE_NEXT_VERSION])
  end

  desc "Deploy a new Production Build to the Play Store"
  lane :deployProduction do
    gradle(task: "clean assembleRelease bundleRelease")
    upload_to_play_store(track: 'production', skip_upload_apk: true, aab: 'ui/build/outputs/bundle/release/ui-release.aab', release_status: 'draft')
  end

  desc "Lane for distributing app using Firebase App Distributions"
  lane :deployDistribute do
    change_log_notes  = conventional_changelog()
    gradle(task: "clean bundleRelease")
      firebase_app_distribution(
              android_artifact_path: "ui/build/outputs/bundle/release/ui-release.aab",
              android_artifact_type: "AAB",
              service_credentials_file: "./.buildsystem/firebase_services_config.json",
              app: ENV['FIREBASE_APP_ID'],
              release_notes: change_log_notes,
              testers_file: "./.buildsystem/testers.txt",
              groups_file: "./.buildsystem/groups.txt"
          )
  end

  desc "Promote Internal to Alpha"
  lane :promoteInternalToAlpha do
    upload_to_play_store(track: 'internal', track_promote_to: 'alpha')
  end

  desc "Promote Alpha to Beta"
  lane :promoteAlphaToBeta do
    upload_to_play_store(track: 'alpha', track_promote_to: 'beta')
  end

  desc "Promote Beta to Production"
  lane :promoteBetaToProduction do
    upload_to_play_store(track: 'beta', track_promote_to: 'production')
  end

end
